/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.13
 * Generated at: 2019-03-09 17:03:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hit.model.*;

public final class updateActivity_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.hit.model");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=windows-1255");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"js/view/jquery/jquery-3.3.1.slim.min.js\"></script>\r\n");
      out.write("  <script src=\"js/view/popper/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"js/view/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("  <title>Update Activity</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-dark bg-dark\">\r\n");
      out.write("\t<img src=\"icon/navbarIcon.svg\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\"><h3 style=\"color:white;\">GymTracking</h3>\r\n");
      out.write("  \t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"true\" aria-label=\"Toggle navigation\">\r\n");
      out.write("    \t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("  \t</button>\r\n");
      out.write("  \t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("   \t\t<ul class=\"navbar-nav\">\r\n");
      out.write("      \t\t<li class=\"nav-item active\">\r\n");
      out.write("        \t\t<a class=\"nav-link\" href=\"userMain.jsp\">Home<span class=\"sr-only\">(current)</span></a>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item\">\r\n");
      out.write("        \t\t<a class=\"nav-link\" href=\"userActivities.jsp\">MyActivity</a>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item\">\r\n");
      out.write("        \t\t<a class=\"nav-link\" href=\"search.jsp\">Search</a>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item\">\r\n");
      out.write("       \t\t\t<a class=\"nav-link\" href=\"about.jsp\">About</a>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item dropdown\">\r\n");
      out.write("        \t\t<a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("          \t\t");
User user = (User)session.getAttribute("loginUser");
          		out.println(user.getUserName()); 
      out.write("\r\n");
      out.write("        \t\t</a>\r\n");
      out.write("        \t\t<div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n");
      out.write("          \t\t<a class=\"dropdown-item\" href=\"updateUser.jsp\">Update User</a>\r\n");
      out.write("          \t\t<a class=\"dropdown-item\" href=\"updateWeightAndHeight.jsp\">Update Weight And Height</a>\r\n");
      out.write("          \t\t<a class=\"dropdown-item\" href=\"updatePassword.jsp\">Update Password</a>\r\n");
      out.write("        \t\t</div>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item\">\r\n");
      out.write("        \t\t<form action=\"/WebGymTracking/GymTrackingController\" method=\"get\">\r\n");
      out.write("            \t<input type=\"hidden\" name=\"command\" value=\"logout\" >\r\n");
      out.write("            \t<input class=\"btn btn-danger\" type=\"submit\" value=\"logout\">\r\n");
      out.write("        \t\t</form>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("    \t</ul>\r\n");
      out.write("  \t</div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t<form action=\"/WebGymTracking/GymTrackingController\" method=\"get\">\r\n");
      out.write("\t\t<h4>Updating the training</h4>\t\t\r\n");
      out.write("\t\t <br>\r\n");
      out.write("\t\t ");
      out.write("\r\n");
      out.write("         <div class=\"radio\">\r\n");
      out.write("\t\t\t<label for=\"myRadio\">Choose the day you want to practice:</label><br>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"myRadio\" id=\"myRadio\" value=\"Sunday\" checked><label>Sunday</label><br>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"myRadio\" id=\"myRadio\" value=\"Monday\"><label>Monday</label><br>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"myRadio\" id=\"myRadio\" value=\"Tuesday\"><label>Tuesday</label><br>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"myRadio\" id=\"myRadio\" value=\"Wednesday\"><label>Wednesday</label><br>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"myRadio\" id=\"myRadio\" value=\"Thursday\"><label>Thursday</label><br>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"myRadio\" id=\"myRadio\" value=\"Friday\"><label>Friday</label><br>\r\n");
      out.write("\t\t\t<input type=\"radio\" name=\"myRadio\" id=\"myRadio\" value=\"Saturday\"><label>Saturday</label><br>\r\n");
      out.write("        </div>\r\n");
      out.write("        <br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t<div class=\"form-group\">\r\n");
      out.write("             <label for=\"numberOfSets\">Sets:</label>\r\n");
      out.write("             <div align=\"center\">\r\n");
      out.write("             <input type=\"number\" size=\"2\" step=\"1\" min=\"1\" max=\"50\" placeholder=\"5\" id=\"inputSets\" >\r\n");
      out.write("             </div>\r\n");
      out.write("             <input type=\"range\" id=\"sliderSets\" class=\"custom-range\" name=\"newNumberOfSets\" value=\"5\" min=\"1\" max=\"50\"/>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("             <label for=\"numberOfReps\">Reps:</label>\r\n");
      out.write("             <div align=\"center\">\r\n");
      out.write("             <input type=\"number\" size=\"2\" step=\"1\" min=\"5\" max=\"100\" placeholder=\"20\" id=\"inputRets\" >\r\n");
      out.write("             </div>\r\n");
      out.write("             <input type=\"range\" id=\"sliderReps\" class=\"custom-range\" name=\"newNumberOfReps\" value=\"20\" min=\"5\" max=\"100\" />\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("\t\t<input class=\"btn btn-primary\" type=\"submit\" name=\"command\" value=\"updateActivity\"><br>\r\n");
      out.write("\t\t<a href=\"userActivities.jsp\" class=\"badge badge-light\" role=\"button\" aria-pressed=\"true\">Return to table</a><br>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<script>\r\n");
      out.write("\tvar sliderSets = document.getElementById(\"sliderSets\");\r\n");
      out.write("\tvar sliderReps = document.getElementById(\"sliderReps\");\r\n");
      out.write("\tvar inputSets = document.getElementById(\"inputSets\");\r\n");
      out.write("\tvar inputReps = document.getElementById(\"inputRets\");\r\n");
      out.write("\r\n");
      out.write("\t///value updation from input to slider\r\n");
      out.write("\t//function input update to slider\r\n");
      out.write("\tfunction sliderSetsInput(){//input udate slider Sets\r\n");
      out.write("\t\tsliderSets.value = inputSets.value;\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction sliderRepsInput(){//input update slider Reps\r\n");
      out.write("\t\tsliderReps.value = (inputReps.value);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t//calling function on change of inputs to update in slider\r\n");
      out.write("\tinputSets.addEventListener(\"change\",sliderSetsInput);\r\n");
      out.write("\tinputReps.addEventListener(\"change\",sliderRepsInput);\r\n");
      out.write("\r\n");
      out.write("\t///value updation from slider to input\r\n");
      out.write("\t//functions to update from slider to inputs \r\n");
      out.write("\tfunction inputSetsSliderSets(){//slider update inputs\r\n");
      out.write("\t   inputSets.value = sliderSets.value;\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction inputRepsSliderReps(){//slider update inputs\r\n");
      out.write("\t   inputReps.value = sliderReps.value;\r\n");
      out.write("\t}\r\n");
      out.write("\tsliderSets.addEventListener(\"change\",inputSetsSliderSets);\r\n");
      out.write("\tsliderReps.addEventListener(\"change\",inputRepsSliderReps);\r\n");
      out.write("\t</script>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
