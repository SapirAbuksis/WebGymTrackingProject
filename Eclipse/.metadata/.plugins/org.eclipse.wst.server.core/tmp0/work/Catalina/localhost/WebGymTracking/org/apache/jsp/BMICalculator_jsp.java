/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.13
 * Generated at: 2019-03-09 17:04:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hit.model.*;

public final class BMICalculator_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.hit.model");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=windows-1255");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"js/view/jquery/jquery-3.3.1.slim.min.js\"></script>\r\n");
      out.write("  <script src=\"js/view/popper/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"js/view/bootstrap/bootstrap.min.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"js/fusioncharts/fusioncharts.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"js/fusioncharts/fusioncharts.theme.fusion.js\"></script>\r\n");
      out.write("  <title>BMI Calculator</title>\r\n");
      out.write("  \r\n");
      out.write("  <style>\r\n");
      out.write("  #checkbox-container {\r\n");
      out.write("  margin-top: 10px;\r\n");
      out.write("  width: 400px;\r\n");
      out.write("  }\r\n");
      out.write("  b {\r\n");
      out.write("  font-weight: bold;\r\n");
      out.write("  color : blue;\r\n");
      out.write("  }\r\n");
      out.write("  </style>\r\n");
      out.write("  \r\n");
      out.write("  ");
      out.write("\r\n");
      out.write("  <script type=\"text/javascript\">\r\n");
      out.write("  ");
User user = (User)session.getAttribute("loginUser");
      out.write("\r\n");
      out.write("  var w = ");
      out.print(user.getWeight());
      out.write(";\r\n");
      out.write("  var h = ");
      out.print(user.getHeight());
      out.write(";\r\n");
      out.write("  var bmiValue = Math.round(w / Math.pow(h, 2) * 10000);\r\n");
      out.write("  \r\n");
      out.write("  FusionCharts.ready(function() {\r\n");
      out.write("\t  var showCheckBox = document.getElementById('showCB'),\r\n");
      out.write("\t  posCheckBox = document.getElementById('positionCB'),\r\n");
      out.write("\t  cpuGauge = new FusionCharts({\r\n");
      out.write("\t\t  type: 'hlineargauge',\r\n");
      out.write("\t\t  renderAt: 'chart-container',\r\n");
      out.write("\t\t  width: '270',\r\n");
      out.write("\t\t  height: '150',\r\n");
      out.write("\t\t  dataFormat: 'json',\r\n");
      out.write("\t\t  dataSource: {\r\n");
      out.write("\t\t\t  \"chart\": {\r\n");
      out.write("\t\t      \"theme\": \"fusion\",\r\n");
      out.write("\t\t      \"caption\": \"Your BMI\",\r\n");
      out.write("\t\t      \"subcaptionFontBold\": \"0\",\r\n");
      out.write("\t\t      \"lowerLimit\": \"0\",\r\n");
      out.write("\t\t      \"upperLimit\": \"100\",\r\n");
      out.write("\t\t      \"chartBottomMargin\": \"20\",\r\n");
      out.write("\t\t      \"captionPadding\": \"10\",\r\n");
      out.write("\t\t      \"valueAbovePointer\": \"0\",\r\n");
      out.write("\t\t      \"valueFontSize\": \"13\",\r\n");
      out.write("\t\t      \"valueFontBold\": \"0\",\r\n");
      out.write("\t\t      \"gaugeFillMix\": \"{light-10},{light-70},{dark-10}\",\r\n");
      out.write("\t\t      \"gaugeFillRatio\": \"40,20,40\"\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      \"colorRange\": {\r\n");
      out.write("\t\t    \t  \"color\": [{\r\n");
      out.write("\t\t    \t\t  \"minValue\": \"0\",\r\n");
      out.write("\t\t              \"maxValue\": \"18.5\",\r\n");
      out.write("\t\t            \t  \"code\": \"#66e6f0\"\r\n");
      out.write("\t\t            },\r\n");
      out.write("\t\t            {\r\n");
      out.write("\t\t              \"minValue\": \"18.9\",\r\n");
      out.write("\t\t              \"maxValue\": \"24.9\",\r\n");
      out.write("\t\t            \t  \"code\": \"#62B58F\"\r\n");
      out.write("\t\t            },\r\n");
      out.write("\t\t            {\r\n");
      out.write("\t\t              \"minValue\": \"25\",\r\n");
      out.write("\t\t              \"maxValue\": \"29.9\",\r\n");
      out.write("\t\t            \t  \"code\": \"#FFC533\"\r\n");
      out.write("\t\t            },\r\n");
      out.write("\t\t            {\r\n");
      out.write("\t\t\t\t\t\"minValue\": \"30\",\r\n");
      out.write("\t\t\t        \"maxValue\": \"100\",\r\n");
      out.write("\t\t\t        \"code\": \"#F2726F\"\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t          ]\r\n");
      out.write("\t\t        },\r\n");
      out.write("\t\t        \"pointers\": {\r\n");
      out.write("\t\t        \t\"pointer\": [{\r\n");
      out.write("\t\t            \"value\": bmiValue\r\n");
      out.write("\t\t            }]\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t  })\r\n");
      out.write("\t  .render();\r\n");
      out.write("\r\n");
      out.write("\t  //Set event listener for check boxes\r\n");
      out.write("\t  showCheckBox.addEventListener && showCheckBox.addEventListener(\"click\", showValue);\r\n");
      out.write("\t  posCheckBox.addEventListener && posCheckBox.addEventListener(\"click\", setPosition);\r\n");
      out.write("\r\n");
      out.write("\t  //Function to show hide value\r\n");
      out.write("\t  function showValue(evt, obj) {\r\n");
      out.write("\t\t  //Using showValue attribute to show hide pointer value\r\n");
      out.write("\t\t  if (showCB.checked) {\r\n");
      out.write("\t\t      cpuGauge.setChartAttribute('showValue', 1);\r\n");
      out.write("\t\t      posCheckBox.disabled = false;\r\n");
      out.write("\t\t    } \r\n");
      out.write("\t\t  else {\r\n");
      out.write("\t\t      cpuGauge.setChartAttribute('showValue', 0);\r\n");
      out.write("\t\t      posCheckBox.disabled = true;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t  //Function to change value pointer\r\n");
      out.write("\t  function setPosition(evt, obj) {\r\n");
      out.write("\t\t  //Using valueAbovePointer attribute to toggle position of pointer value \r\n");
      out.write("\t\t  (posCheckBox.checked) ? cpuGauge.setChartAttribute('valueAbovePointer', 1):\r\n");
      out.write("\t\t\t  cpuGauge.setChartAttribute('valueAbovePointer', 0);\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t  });\r\n");
      out.write("</script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-dark bg-dark\">\r\n");
      out.write("  \t<img src=\"icon/navbarIcon.svg\" width=\"30\" height=\"30\" class=\"d-inline-block align-top\" alt=\"\"><h3 style=\"color:white;\">GymTracking</h3>\r\n");
      out.write("  \t<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"true\" aria-label=\"Toggle navigation\">\r\n");
      out.write("    \t<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("  \t</button>\r\n");
      out.write("  \t<div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("    \t<ul class=\"navbar-nav\">\r\n");
      out.write("      \t\t<li class=\"nav-item active\">\r\n");
      out.write("        \t\t<a class=\"nav-link\" href=\"userMain.jsp\">Home<span class=\"sr-only\">(current)</span></a>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item\">\r\n");
      out.write("        \t\t<a class=\"nav-link\" href=\"userActivities.jsp\">MyActivity</a>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item\">\r\n");
      out.write("        \t\t<a class=\"nav-link\" href=\"search.jsp\">Search</a>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item\">\r\n");
      out.write("        \t\t<a class=\"nav-link\" href=\"about.jsp\">About</a>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item dropdown\">\r\n");
      out.write("        \t\t<a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("          \t\t");
out.println(user.getUserName()); 
      out.write("\r\n");
      out.write("        \t\t</a>\r\n");
      out.write("        \t\t<div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n");
      out.write("          \t\t\t<a class=\"dropdown-item\" href=\"updateUser.jsp\">Update User</a>\r\n");
      out.write("          \t\t\t<a class=\"dropdown-item\" href=\"updateWeightAndHeight.jsp\">Update Weight And Height</a>\r\n");
      out.write("         \t\t\t <a class=\"dropdown-item\" href=\"updatePassword.jsp\">Update Password</a>\r\n");
      out.write("       \t \t\t</div>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("      \t\t<li class=\"nav-item\">\r\n");
      out.write("        \t\t<form action=\"/WebGymTracking/GymTrackingController\" method=\"get\">\r\n");
      out.write("            \t<input type=\"hidden\" name=\"command\" value=\"logout\" >\r\n");
      out.write("            \t<input class=\"btn btn-danger\" type=\"submit\" value=\"logout\">\r\n");
      out.write("        \t\t</form>\r\n");
      out.write("      \t\t</li>\r\n");
      out.write("    \t</ul>\r\n");
      out.write("  \t</div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("<h1>BMI Coalculator</h1>\r\n");
      out.write("<img class=\"mb-4\" src=\"icon/iconBMI.svg\" alt=\"\" width=\"72\" height=\"72\">\r\n");
      out.write("<div>\r\n");
      out.write("\t<h2><b style=\"color:black\">Your profile is: </b></h2>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t");
//out.println(bmiValue);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<h4>UserName: <b>");
 out.println(user.getUserName()); 
      out.write("</b></h4>\r\n");
      out.write("\t<h4>Weight: <b>");
 out.println(user.getWeight());  
      out.write("Kg</b></h4>\r\n");
      out.write("\t<h4>Height: <b>");
 out.println(user.getHeight());  
      out.write("Cm</b></h4>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t<div id=\"chart-container\">FusionCharts will render here</div>\r\n");
      out.write("\t<div id=\"checkbox-container\">\r\n");
      out.write("\t\t<span style=\"color:#66e6f0\">Low </span><span style=\"color:#62B58F\">Normal </span>\r\n");
      out.write("\t\t<span style=\"color:#FFC533\">Overweight </span><span style=\"color:#F2726F\">Obese</span><br>\r\n");
      out.write("\t\t<input type=\"checkbox\" id=\"showCB\" name=\"padding\" value=\"1\" checked>Show Value<br>\r\n");
      out.write("\t\t<input type=\"checkbox\" id=\"positionCB\" name=\"padding\" value=\"2\">Place Value Above Pointer\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<a href=\"userMain.jsp\" class=\"badge badge-info\">Back To Main</a>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
